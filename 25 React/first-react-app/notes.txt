üîñ 2:34:35
üìΩÔ∏è https://www.youtube.com/watch?v=6l8RWV8D-Yo

REFER TO THE REACT DOCS, THEY ARE AMAZING

(...Basic React stuff)

Components are functions that return UI. In React, you NEED to capitalize your component 
names.

When exporting multiple things from a single file, pass them as a object and remove "default".
But it's not preferable to export more than 1 component from one file

JSX -> HTML inside your JavaScript

converting HTML to JSX => 
1. Return a single root element
    To get around this, use <> </> as a wrapper (these are called fragments)

2. you can't write "class" to give classes to your HTML elements, use className=""

3. Whenever using inline CSS or attributes (onClick), they must be camel-cased.

4. All self-closing tags must be explicitly closed (<input />, <br />)

To use expressions/variables, use {}. to hard-code stuff, use ""

style: {{}}, outer bracket means that it must escape jsx, the inner bracket means it's a object.
IN REACT, YOU MUST PASS STYLES AS AN OBJECT

To pass different arguments to a component so that we can different UI, we pass "props"
props is an object, so we can destructure values out of it.

Props are read-only, can't change them inside a component using onClick etc,

> To pass numbers, you must pass them as an expression -> example: {45}, don't pass them as a string.
> You can give a default prop value like regular objects
> You can store your props as an object in your and pass them in a component using Spread operator


                                CONDITIONAL RENDERING
We only render a component if it satisifies a condition. Most common way is to use ternary operator.
Another way -> use short circuiting. If LHS is false, right side will never evaluate.

Try to take out as much common part as you can, change as less content as you can in conditional rendering.

                                LIST-RENDERING
Use .map()

Moving videos array to another file to clean up.

** REACT HAS A CONCEPT OF VIRTUAL-DOM, WHICH SAYS THAT REACT SHOULD BE ABLE TO UNIQUELY IDENTIFY EACH COMPONENT,
SO THAT IF IT DOESN'T HAVE ANY CHANGES, REACT WON'T RE-RENDER IT AGAIN AND AGAIN

** WHENEVER YOU ARE WRITING ANY FORM OF JAVASCRIPT IN JSX, USE {}

                                INTERACTIVITY

Events ------------
Adding a PlayButton. But nothing is happening when we click it? When component is rendering, it's logging it.
Because we are calling an event-handler function. ONLY DEFINE IT. Either pass a reference to the function, or pass 
it as an arrow function.

The reason is that, when you execute the function in the attribute, it will run what is returned from the function, which is nothing.

Whenever you pass something in between the tags of a component, it is available as props.children
üçíREAD ABOUT IT FROM DOCS

Right now, we are logging in both. What if we want to do alert on 1 button and log on second? Yes
You can pass functions as props. 